buildscript {
  repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

plugins {
    id 'java-library'
}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"
apply plugin: "maven"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod_version}"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}
group = "ivorius.ivtoolkit" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "IvToolkit"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replaceIn "ivorius/ivtoolkit/IvToolkit.java"
    replace "GRADLE_MODVERSION", config.mod_version
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'ivorius.ivtoolkit.IvToolkitLoadingPlugin'
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
            
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

runClient {
    jvmArgs '-Dfml.coreMods.load=ivorius.ivtoolkit.IvToolkitLoadingPlugin'
}
runServer {
    jvmArgs '-Dfml.coreMods.load=ivorius.ivtoolkit.IvToolkitLoadingPlugin'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'

    manifest {
        attributes 'FMLCorePlugin': 'ivorius.ivtoolkit.IvToolkitLoadingPlugin'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'

    manifest {
        attributes 'FMLCorePlugin': 'ivorius.ivtoolkit.IvToolkitLoadingPlugin'
    }
}

/*
// compile SevenCommonsLoader separately, targeting Java 6
// for the warning message
task compileLoader(type: JavaCompile) {
    source = fileTree(dir: "src/main/java")
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.output.classesDir
    include 'ivorius/ivtoolkit/IvToolkitLoadingPlugin*'
    include 'ivorius/ivtoolkit/tools/JavaCompatibility*'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileJava {
    exclude 'ivorius/ivtoolkit/IvToolkitLoadingPlugin*'
    exclude 'ivorius/ivtoolkit/tools/JavaCompatibility*'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

tasks.compileJava.dependsOn('compileLoader')
*/

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

artifacts {
    archives sourceJar
    archives deobfJar
}

artifactory {
    contextUrl = System.getenv("MAVEN_URL")
    publish {
        repository {
            repoKey = 'thorfusion'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = false
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'central'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true

        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = rootProject.name
            groupId = project.group
            version = project.version
            artifacts = [sourceJar, deobfJar, jar]
        }
    }
}